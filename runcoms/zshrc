#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# this matches files that start with a dot when you type cd and hit tab
_comp_options+=(globdots)

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='find . \! \( -type d -path ./.git -prune \) \! -type d \! -name '\''*.tags'\'' -printf '\''%P\n'\'
export FZF_COMPLETION_TRIGGER=''
bindkey '^A' fzf-completion
bindkey '^I' $fzf_default_completion
# Using highlight (http://www.andre-simon.de/doku/highlight/en/highlight.html)
export FZF_CTRL_T_OPTS="--preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"

# aliases
source ~/.zsh_aliases

# functions
source ~/.zsh_functions
fpath=(~/.config/zsh/functions $fpath)

# git
alias git-remove-all-tags="zsh -c 'git tag -d \$(git tag -l) && git fetch && git push origin --delete \$(git tag -l) && git tag -d \$(git tag -l)'"

#
# VI KEYMAPPING
#

bindkey -M viins ';' vi-cmd-mode
bindkey -M visual ';' vi-cmd-mode

bindkey -M vicmd "u" undo
bindkey -M vicmd "U" redo
bindkey -M viins "$key_info[Control]z" undo
bindkey -M viins "$key_info[Control]Z" redo

bindkey -M vicmd "B" beginning-of-line
bindkey -M vicmd "E" end-of-line
bindkey -M vicmd "e" vi-forward-word
bindkey -M vicmd "b" vi-backward-word

bindkey -M viins "$key_info[Control]w" backward-kill-word
bindkey -M vicmd "$key_info[Control]w" backward-kill-word

#
# Yank to the system clipboard
#
function vi-yank-xclip {
  zle vi-yank
  echo "$CUTBUFFER" | pbcopy -i
}

zle -N vi-yank-xclip
bindkey -M vicmd 'y' vi-yank-xclip

eval "$(starship init zsh)"
# fnm
export PATH="/Users/jacklee/Library/Application Support/fnm:$PATH"
eval "`fnm env`"

#
# direv
#
eval "$(direnv hook zsh)"

#
# fnm
#
eval "$(fnm env --use-on-cd)"

#
# DOCKER FIX (https://stackoverflow.com/questions/44084846/cannot-connect-to-the-docker-daemon-on-macos/74148162#74148162)
#
# perma solution: sudo ln -s ~/Library/Containers/com.docker.docker/Data/docker.raw.sock /var/run/docker.sock
export DOCKER_HOST=unix:///Users/$(whoami)/Library/Containers/com.docker.docker/Data/docker.raw.sock

#
# gcloud
#
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

#
# kubectl
#
# [Install and Set Up kubectl on macOS | Kubernetes](https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/#enable-shell-autocompletion)
source <(kubectl completion zsh)

#
# postgresql@15
#
export PATH="/opt/homebrew/opt/postgresql@15/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/postgresql@15/lib"
export CPPFLAGS="-I/opt/homebrew/opt/postgresql@15/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/postgresql@15/lib/pkgconfig"

# opam configuration
[[ ! -r /Users/jacklee/.opam/opam-init/init.zsh ]] || source /Users/jacklee/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null

#
# bun
#
# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
# bun completions
[ -s "/Users/jacklee/.bun/_bun" ] && source "/Users/jacklee/.bun/_bun"
fpath+=${ZDOTDIR:-~}/.zsh_functions

# Wasmer
export WASMER_DIR="/Users/jacklee/.wasmer"
[ -s "$WASMER_DIR/wasmer.sh" ] && source "$WASMER_DIR/wasmer.sh"
